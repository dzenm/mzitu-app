apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def libraries = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion
    dataBinding { enabled true }
    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner cfg.testInstrumentationRunner
    }

    //配置签名
    signingConfigs {
        debug {
            storeFile file("../app/meizitu.store")
            storePassword KEY_STORE_PASSWORD
            keyAlias KEY_ALIAS_DEBUG
            keyPassword KEY_PASSWORD_DEBUG
        }

        release {
            storeFile file("../app/meizitu.store")
            storePassword KEY_STORE_PASSWORD
            keyAlias KEY_ALIAS_RELEASE
            keyPassword KEY_PASSWORD_RELEASE
        }
    }

    buildTypes {
        release {
            shrinkResources true                    // 是否压缩资源
            minifyEnabled true                      // 是否混淆
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 混淆配置文件
            resValue "string", "app_name", "@string/app_name_release"
            // 在AndroidManifest.xml中配置的app名称，在这里实现了动态配置
            signingConfig signingConfigs.release    // 签名配置
        }
        debug {
            shrinkResources false                   // 是否压缩资源
            minifyEnabled false                     // 是否混淆
            zipAlignEnabled false
            pseudoLocalesEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 混淆配置文件
            resValue "string", "app_name", "@string/app_name_debug"
            // 在AndroidManifest.xml中配置的app名称，在这里实现了动态配置
            signingConfig signingConfigs.debug      // 签名配置
            applicationIdSuffix '.debug'
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.+'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation libraries.design
    implementation libraries.recyclerview
    implementation libraries.cardview
    implementation libraries.palette
    implementation libraries.okhttp3
    implementation libraries.jsoup
    implementation libraries.lifecycle
    annotationProcessor libraries.glideCompiler
    implementation libraries.rxjava2
    implementation libraries.rxandroid
    implementation libraries.glide
    annotationProcessor libraries.lifecycleCompiler
    implementation(libraries.glideRecyclerview) {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
}
